{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\satya\\\\OneDrive\\\\Desktop\\\\chatapp\\\\chatapp-web\\\\src\\\\screens\\\\UserListScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { userAPI, conversationAPI } from '../services/api';\nimport socket from '../services/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserListScreen = ({\n  user,\n  onLogout\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const fetchUsers = async () => {\n    try {\n      const response = await userAPI.getUsers();\n      setUsers(response.data);\n      setError(null);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to fetch users');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchUsers();\n\n    // Refresh users periodically\n    const interval = setInterval(fetchUsers, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Listen for socket events to update user status\n  useEffect(() => {\n    const handleUserOnline = data => {\n      setUsers(prevUsers => prevUsers.map(u => u._id === data.userId ? {\n        ...u,\n        isOnline: true\n      } : u));\n    };\n    const handleUserOffline = data => {\n      setUsers(prevUsers => prevUsers.map(u => u._id === data.userId ? {\n        ...u,\n        isOnline: false,\n        lastSeen: data.lastSeen\n      } : u));\n    };\n\n    // Add event listeners\n    socket.on('user:online', handleUserOnline);\n    socket.on('user:offline', handleUserOffline);\n\n    // Cleanup event listeners\n    return () => {\n      socket.off('user:online', handleUserOnline);\n      socket.off('user:offline', handleUserOffline);\n    };\n  }, []);\n  const handleUserClick = async selectedUser => {\n    try {\n      const response = await conversationAPI.createConversation(selectedUser._id);\n      const conversation = response.data;\n      navigate(`/chat/${conversation._id}`, {\n        state: {\n          participant: selectedUser\n        }\n      });\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Failed to create conversation');\n    }\n  };\n  const handleLogout = () => {\n    onLogout();\n    navigate('/login');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading users...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), user && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Hello, \", user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-button\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list-content\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        style: {\n          textAlign: 'center',\n          margin: '20px 0'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-item\",\n        onClick: () => handleUserClick(user),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"avatar-text\",\n            children: user.username.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"username\",\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"user-email\",\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-dot ${user.isOnline ? 'online' : 'offline'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-text\",\n            children: user.isOnline ? 'Online' : 'Offline'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(UserListScreen, \"Cdt21/iRJvTqMdTBBUhVAo7mv7s=\", false, function () {\n  return [useNavigate];\n});\n_c = UserListScreen;\nexport default UserListScreen;\nvar _c;\n$RefreshReg$(_c, \"UserListScreen\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","userAPI","conversationAPI","socket","jsxDEV","_jsxDEV","UserListScreen","user","onLogout","_s","users","setUsers","loading","setLoading","error","setError","navigate","fetchUsers","response","getUsers","data","err","_err$response","_err$response$data","message","interval","setInterval","clearInterval","handleUserOnline","prevUsers","map","u","_id","userId","isOnline","handleUserOffline","lastSeen","on","off","handleUserClick","selectedUser","createConversation","conversation","state","participant","_err$response2","_err$response2$data","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","username","onClick","style","textAlign","margin","charAt","toUpperCase","email","_c","$RefreshReg$"],"sources":["c:/Users/satya/OneDrive/Desktop/chatapp/chatapp-web/src/screens/UserListScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { userAPI, conversationAPI } from '../services/api';\r\nimport socket from '../services/socket';\r\n\r\nconst UserListScreen = ({ user, onLogout }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await userAPI.getUsers();\r\n      setUsers(response.data);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to fetch users');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n    \r\n    // Refresh users periodically\r\n    const interval = setInterval(fetchUsers, 30000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Listen for socket events to update user status\r\n  useEffect(() => {\r\n    const handleUserOnline = (data) => {\r\n      setUsers(prevUsers => \r\n        prevUsers.map(u => \r\n          u._id === data.userId ? { ...u, isOnline: true } : u\r\n        )\r\n      );\r\n    };\r\n\r\n    const handleUserOffline = (data) => {\r\n      setUsers(prevUsers => \r\n        prevUsers.map(u => \r\n          u._id === data.userId ? { ...u, isOnline: false, lastSeen: data.lastSeen } : u\r\n        )\r\n      );\r\n    };\r\n\r\n    // Add event listeners\r\n    socket.on('user:online', handleUserOnline);\r\n    socket.on('user:offline', handleUserOffline);\r\n\r\n    // Cleanup event listeners\r\n    return () => {\r\n      socket.off('user:online', handleUserOnline);\r\n      socket.off('user:offline', handleUserOffline);\r\n    };\r\n  }, []);\r\n\r\n  const handleUserClick = async (selectedUser) => {\r\n    try {\r\n      const response = await conversationAPI.createConversation(selectedUser._id);\r\n      const conversation = response.data;\r\n      navigate(`/chat/${conversation._id}`, { state: { participant: selectedUser } });\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to create conversation');\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    onLogout();\r\n    navigate('/login');\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading users...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-list-container\">\r\n      <div className=\"user-list-header\">\r\n        <h1>Chat App</h1>\r\n        {user && <p>Hello, {user.username}</p>}\r\n        <button className=\"logout-button\" onClick={handleLogout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"user-list-content\">\r\n        {error && (\r\n          <div className=\"error-message\" style={{ textAlign: 'center', margin: '20px 0' }}>\r\n            {error}\r\n          </div>\r\n        )}\r\n        \r\n        {users.map((user) => (\r\n          <div \r\n            key={user._id} \r\n            className=\"user-item\"\r\n            onClick={() => handleUserClick(user)}\r\n          >\r\n            <div className=\"user-avatar\">\r\n              <span className=\"avatar-text\">\r\n                {user.username.charAt(0).toUpperCase()}\r\n              </span>\r\n            </div>\r\n            <div className=\"user-info\">\r\n              <h3 className=\"username\">{user.username}</h3>\r\n              <p className=\"user-email\">{user.email}</p>\r\n            </div>\r\n            <div className=\"status-indicator\">\r\n              <div className={`status-dot ${user.isOnline ? 'online' : 'offline'}`}></div>\r\n              <span className=\"status-text\">\r\n                {user.isOnline ? 'Online' : 'Offline'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
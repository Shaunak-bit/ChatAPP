{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\satya\\\\OneDrive\\\\Desktop\\\\chatapp\\\\chatapp-web\\\\src\\\\screens\\\\ChatScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport socket from '../services/socket';\nimport { messageAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatScreen = ({\n  user,\n  onLogout\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    conversationId\n  } = useParams();\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  const messagesEndRef = useRef(null);\n  const participant = state === null || state === void 0 ? void 0 : state.participant;\n\n  // Scroll to bottom of messages\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  // Fetch messages\n  const fetchMessages = useCallback(async () => {\n    try {\n      const response = await messageAPI.getMessages(conversationId);\n      // Ensure all messages have required properties\n      const messagesWithDefaults = response.data.map(message => ({\n        ...message,\n        isRead: message.isRead || false\n      }));\n      setMessages(messagesWithDefaults);\n      setError(null);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to fetch messages');\n    } finally {\n      setLoading(false);\n    }\n  }, [conversationId]);\n\n  // Send message\n  const sendMessage = () => {\n    if (!newMessage.trim()) return;\n    socket.sendMessage(conversationId, newMessage.trim());\n    setNewMessage('');\n    socket.stopTyping(conversationId);\n  };\n\n  // Handle typing\n  const handleTyping = e => {\n    setNewMessage(e.target.value);\n    if (e.target.value) {\n      socket.startTyping(conversationId);\n    } else {\n      socket.stopTyping(conversationId);\n    }\n  };\n\n  // Mark message as read\n  const markAsRead = messageId => {\n    socket.markMessageAsRead(messageId);\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    sendMessage();\n  };\n  useEffect(() => {\n    if (!participant) {\n      navigate('/users');\n      return;\n    }\n\n    // Join conversation room\n    socket.joinConversation(conversationId);\n\n    // Fetch initial messages\n    fetchMessages();\n\n    // Listen for new messages\n    const handleMessageNew = message => {\n      // Ensure new message has required properties\n      const messageWithDefaults = {\n        ...message,\n        isRead: message.isRead || false\n      };\n      setMessages(prevMessages => [...prevMessages, messageWithDefaults]);\n\n      // Mark message as read if it's not from current user\n      if (messageWithDefaults.sender._id !== user._id) {\n        markAsRead(messageWithDefaults._id);\n      }\n    };\n\n    // Listen for typing events\n    const handleTypingStart = data => {\n      if (data.userId !== user._id && data.conversationId === conversationId) {\n        setTypingUsers(prev => [...prev, data.userId]);\n      }\n    };\n    const handleTypingStop = data => {\n      if (data.userId !== user._id && data.conversationId === conversationId) {\n        setTypingUsers(prev => prev.filter(id => id !== data.userId));\n      }\n    };\n\n    // Listen for read receipts\n    const handleMessageRead = data => {\n      setMessages(prevMessages => prevMessages.map(msg => msg._id === data.messageId ? {\n        ...msg,\n        isRead: true,\n        readAt: data.readAt\n      } : msg));\n    };\n    socket.on('message:new', handleMessageNew);\n    socket.on('typing:start', handleTypingStart);\n    socket.on('typing:stop', handleTypingStop);\n    socket.on('message:read', handleMessageRead);\n    return () => {\n      socket.off('message:new', handleMessageNew);\n      socket.off('typing:start', handleTypingStart);\n      socket.off('typing:stop', handleTypingStop);\n      socket.off('message:read', handleMessageRead);\n\n      // Leave conversation room\n      socket.leaveConversation(conversationId);\n    };\n  }, [conversationId, participant, user._id, fetchMessages, navigate]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleLogout = () => {\n    onLogout();\n    navigate('/login');\n  };\n  if (!participant) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading chat...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 12\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading messages...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"participant-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"participant-avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"participant-avatar-text\",\n            children: participant.username.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"participant-name\",\n            children: participant.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"participant-status\",\n            children: participant.isOnline ? 'Online' : 'Offline'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-button\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        style: {\n          textAlign: 'center',\n          margin: '20px 0'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), messages.map(message => {\n        const isOwnMessage = message.sender._id === user._id;\n        const timestamp = new Date(message.createdAt).toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-container ${isOwnMessage ? 'own' : 'other'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-bubble ${isOwnMessage ? 'own' : 'other'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: `message-text ${isOwnMessage ? 'own' : 'other'}`,\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message-info ${isOwnMessage ? 'own' : 'other'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `message-time ${isOwnMessage ? 'own' : 'other'}`,\n                children: timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this), isOwnMessage ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `read-receipt ${message.isRead ? 'read' : 'sent'}`,\n                children: (message.isRead !== undefined ? message.isRead : false) ? '✓✓' : '✓'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"read-receipt received\",\n                children: \"\\u2713\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)\n        }, message._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this);\n      }), typingUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-bubble\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"typing-text\",\n            children: [participant.username, \" is typing...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        style: {\n          display: 'flex',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"text-input\",\n          value: newMessage,\n          onChange: handleTyping,\n          placeholder: \"Type a message...\",\n          rows: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-button\",\n          disabled: !newMessage.trim(),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatScreen, \"GcTWBvH9Fygq/1bORZkrVe5CYB0=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = ChatScreen;\nexport default ChatScreen;\nvar _c;\n$RefreshReg$(_c, \"ChatScreen\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useNavigate","useParams","useLocation","socket","messageAPI","jsxDEV","_jsxDEV","ChatScreen","user","onLogout","_s","messages","setMessages","newMessage","setNewMessage","typingUsers","setTypingUsers","loading","setLoading","error","setError","conversationId","state","navigate","messagesEndRef","participant","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchMessages","response","getMessages","messagesWithDefaults","data","map","message","isRead","err","_err$response","_err$response$data","sendMessage","trim","stopTyping","handleTyping","e","target","value","startTyping","markAsRead","messageId","markMessageAsRead","handleSubmit","preventDefault","joinConversation","handleMessageNew","messageWithDefaults","prevMessages","sender","_id","handleTypingStart","userId","prev","handleTypingStop","filter","id","handleMessageRead","msg","readAt","on","off","leaveConversation","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","username","charAt","toUpperCase","isOnline","onClick","style","textAlign","margin","isOwnMessage","timestamp","Date","createdAt","toLocaleTimeString","hour","minute","text","undefined","length","ref","onSubmit","display","width","onChange","placeholder","rows","type","disabled","_c","$RefreshReg$"],"sources":["c:/Users/satya/OneDrive/Desktop/chatapp/chatapp-web/src/screens/ChatScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\r\nimport socket from '../services/socket';\r\nimport { messageAPI } from '../services/api';\r\n\r\nconst ChatScreen = ({ user, onLogout }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [typingUsers, setTypingUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  const { conversationId } = useParams();\r\n  const { state } = useLocation();\r\n  const navigate = useNavigate();\r\n  const messagesEndRef = useRef(null);\r\n  \r\n  const participant = state?.participant;\r\n\r\n  // Scroll to bottom of messages\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  // Fetch messages\r\n  const fetchMessages = useCallback(async () => {\r\n    try {\r\n      const response = await messageAPI.getMessages(conversationId);\r\n      // Ensure all messages have required properties\r\n      const messagesWithDefaults = response.data.map(message => ({\r\n        ...message,\r\n        isRead: message.isRead || false\r\n      }));\r\n      setMessages(messagesWithDefaults);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to fetch messages');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [conversationId]);\r\n\r\n  // Send message\r\n  const sendMessage = () => {\r\n    if (!newMessage.trim()) return;\r\n    \r\n    socket.sendMessage(conversationId, newMessage.trim());\r\n    setNewMessage('');\r\n    socket.stopTyping(conversationId);\r\n  };\r\n\r\n  // Handle typing\r\n  const handleTyping = (e) => {\r\n    setNewMessage(e.target.value);\r\n    \r\n    if (e.target.value) {\r\n      socket.startTyping(conversationId);\r\n    } else {\r\n      socket.stopTyping(conversationId);\r\n    }\r\n  };\r\n\r\n  // Mark message as read\r\n  const markAsRead = (messageId) => {\r\n    socket.markMessageAsRead(messageId);\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    sendMessage();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!participant) {\r\n      navigate('/users');\r\n      return;\r\n    }\r\n\r\n    // Join conversation room\r\n    socket.joinConversation(conversationId);\r\n    \r\n    // Fetch initial messages\r\n    fetchMessages();\r\n    \r\n    // Listen for new messages\r\n    const handleMessageNew = (message) => {\r\n      // Ensure new message has required properties\r\n      const messageWithDefaults = {\r\n        ...message,\r\n        isRead: message.isRead || false\r\n      };\r\n      setMessages(prevMessages => [...prevMessages, messageWithDefaults]);\r\n      \r\n      // Mark message as read if it's not from current user\r\n      if (messageWithDefaults.sender._id !== user._id) {\r\n        markAsRead(messageWithDefaults._id);\r\n      }\r\n    };\r\n    \r\n    // Listen for typing events\r\n    const handleTypingStart = (data) => {\r\n      if (data.userId !== user._id && data.conversationId === conversationId) {\r\n        setTypingUsers(prev => [...prev, data.userId]);\r\n      }\r\n    };\r\n    \r\n    const handleTypingStop = (data) => {\r\n      if (data.userId !== user._id && data.conversationId === conversationId) {\r\n        setTypingUsers(prev => prev.filter(id => id !== data.userId));\r\n      }\r\n    };\r\n    \r\n    // Listen for read receipts\r\n    const handleMessageRead = (data) => {\r\n      setMessages(prevMessages => \r\n        prevMessages.map(msg => \r\n          msg._id === data.messageId ? { ...msg, isRead: true, readAt: data.readAt } : msg\r\n        )\r\n      );\r\n    };\r\n    \r\n    socket.on('message:new', handleMessageNew);\r\n    socket.on('typing:start', handleTypingStart);\r\n    socket.on('typing:stop', handleTypingStop);\r\n    socket.on('message:read', handleMessageRead);\r\n    \r\n    return () => {\r\n      socket.off('message:new', handleMessageNew);\r\n      socket.off('typing:start', handleTypingStart);\r\n      socket.off('typing:stop', handleTypingStop);\r\n      socket.off('message:read', handleMessageRead);\r\n      \r\n      // Leave conversation room\r\n      socket.leaveConversation(conversationId);\r\n    };\r\n  }, [conversationId, participant, user._id, fetchMessages, navigate]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const handleLogout = () => {\r\n    onLogout();\r\n    navigate('/login');\r\n  };\r\n\r\n  if (!participant) {\r\n    return <div className=\"loading\">Loading chat...</div>;\r\n  }\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading messages...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-header\">\r\n        <div className=\"participant-info\">\r\n          <div className=\"participant-avatar\">\r\n            <span className=\"participant-avatar-text\">\r\n              {participant.username.charAt(0).toUpperCase()}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"participant-name\">{participant.username}</h3>\r\n            <p className=\"participant-status\">\r\n              {participant.isOnline ? 'Online' : 'Offline'}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <button className=\"logout-button\" onClick={handleLogout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"messages-container\">\r\n        {error && (\r\n          <div className=\"error-message\" style={{ textAlign: 'center', margin: '20px 0' }}>\r\n            {error}\r\n          </div>\r\n        )}\r\n        \r\n        {messages.map((message) => {\r\n          const isOwnMessage = message.sender._id === user._id;\r\n          const timestamp = new Date(message.createdAt).toLocaleTimeString([], { \r\n            hour: '2-digit', \r\n            minute: '2-digit' \r\n          });\r\n          \r\n          return (\r\n            <div \r\n              key={message._id} \r\n              className={`message-container ${isOwnMessage ? 'own' : 'other'}`}\r\n            >\r\n              <div className={`message-bubble ${isOwnMessage ? 'own' : 'other'}`}>\r\n                <p className={`message-text ${isOwnMessage ? 'own' : 'other'}`}>\r\n                  {message.text}\r\n                </p>\r\n                <div className={`message-info ${isOwnMessage ? 'own' : 'other'}`}>\r\n                  <span className={`message-time ${isOwnMessage ? 'own' : 'other'}`}>\r\n                    {timestamp}\r\n                  </span>\r\n                  {isOwnMessage ? (\r\n                    <span className={`read-receipt ${message.isRead ? 'read' : 'sent'}`}>\r\n                      {(message.isRead !== undefined ? message.isRead : false) ? '✓✓' : '✓'}\r\n                    </span>\r\n                  ) : (\r\n                    <span className=\"read-receipt received\">✓</span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        \r\n        {typingUsers.length > 0 && (\r\n          <div className=\"typing-container\">\r\n            <div className=\"typing-bubble\">\r\n              <p className=\"typing-text\">\r\n                {participant.username} is typing...\r\n              </p>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      \r\n      <div className=\"input-container\">\r\n        <form onSubmit={handleSubmit} style={{ display: 'flex', width: '100%' }}>\r\n          <textarea\r\n            className=\"text-input\"\r\n            value={newMessage}\r\n            onChange={handleTyping}\r\n            placeholder=\"Type a message...\"\r\n            rows=\"1\"\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"send-button\"\r\n            disabled={!newMessage.trim()}\r\n          >\r\n            Send\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,SAASC,WAAW,EAAEC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACtE,OAAOC,MAAM,MAAM,oBAAoB;AACvC,SAASC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAM;IAAEyB;EAAe,CAAC,GAAGpB,SAAS,CAAC,CAAC;EACtC,MAAM;IAAEqB;EAAM,CAAC,GAAGpB,WAAW,CAAC,CAAC;EAC/B,MAAMqB,QAAQ,GAAGvB,WAAW,CAAC,CAAC;EAC9B,MAAMwB,cAAc,GAAG1B,MAAM,CAAC,IAAI,CAAC;EAEnC,MAAM2B,WAAW,GAAGH,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEG,WAAW;;EAEtC;EACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC3B,CAAAA,qBAAA,GAAAH,cAAc,CAACI,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;;EAED;EACA,MAAMC,aAAa,GAAGhC,WAAW,CAAC,YAAY;IAC5C,IAAI;MACF,MAAMiC,QAAQ,GAAG,MAAM5B,UAAU,CAAC6B,WAAW,CAACZ,cAAc,CAAC;MAC7D;MACA,MAAMa,oBAAoB,GAAGF,QAAQ,CAACG,IAAI,CAACC,GAAG,CAACC,OAAO,KAAK;QACzD,GAAGA,OAAO;QACVC,MAAM,EAAED,OAAO,CAACC,MAAM,IAAI;MAC5B,CAAC,CAAC,CAAC;MACH1B,WAAW,CAACsB,oBAAoB,CAAC;MACjCd,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOmB,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZrB,QAAQ,CAAC,EAAAoB,aAAA,GAAAD,GAAG,CAACP,QAAQ,cAAAQ,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcL,IAAI,cAAAM,kBAAA,uBAAlBA,kBAAA,CAAoBJ,OAAO,KAAI,0BAA0B,CAAC;IACrE,CAAC,SAAS;MACRnB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACG,cAAc,CAAC,CAAC;;EAEpB;EACA,MAAMqB,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAAC7B,UAAU,CAAC8B,IAAI,CAAC,CAAC,EAAE;IAExBxC,MAAM,CAACuC,WAAW,CAACrB,cAAc,EAAER,UAAU,CAAC8B,IAAI,CAAC,CAAC,CAAC;IACrD7B,aAAa,CAAC,EAAE,CAAC;IACjBX,MAAM,CAACyC,UAAU,CAACvB,cAAc,CAAC;EACnC,CAAC;;EAED;EACA,MAAMwB,YAAY,GAAIC,CAAC,IAAK;IAC1BhC,aAAa,CAACgC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAE7B,IAAIF,CAAC,CAACC,MAAM,CAACC,KAAK,EAAE;MAClB7C,MAAM,CAAC8C,WAAW,CAAC5B,cAAc,CAAC;IACpC,CAAC,MAAM;MACLlB,MAAM,CAACyC,UAAU,CAACvB,cAAc,CAAC;IACnC;EACF,CAAC;;EAED;EACA,MAAM6B,UAAU,GAAIC,SAAS,IAAK;IAChChD,MAAM,CAACiD,iBAAiB,CAACD,SAAS,CAAC;EACrC,CAAC;;EAED;EACA,MAAME,YAAY,GAAIP,CAAC,IAAK;IAC1BA,CAAC,CAACQ,cAAc,CAAC,CAAC;IAClBZ,WAAW,CAAC,CAAC;EACf,CAAC;EAED7C,SAAS,CAAC,MAAM;IACd,IAAI,CAAC4B,WAAW,EAAE;MAChBF,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;;IAEA;IACApB,MAAM,CAACoD,gBAAgB,CAAClC,cAAc,CAAC;;IAEvC;IACAU,aAAa,CAAC,CAAC;;IAEf;IACA,MAAMyB,gBAAgB,GAAInB,OAAO,IAAK;MACpC;MACA,MAAMoB,mBAAmB,GAAG;QAC1B,GAAGpB,OAAO;QACVC,MAAM,EAAED,OAAO,CAACC,MAAM,IAAI;MAC5B,CAAC;MACD1B,WAAW,CAAC8C,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAED,mBAAmB,CAAC,CAAC;;MAEnE;MACA,IAAIA,mBAAmB,CAACE,MAAM,CAACC,GAAG,KAAKpD,IAAI,CAACoD,GAAG,EAAE;QAC/CV,UAAU,CAACO,mBAAmB,CAACG,GAAG,CAAC;MACrC;IACF,CAAC;;IAED;IACA,MAAMC,iBAAiB,GAAI1B,IAAI,IAAK;MAClC,IAAIA,IAAI,CAAC2B,MAAM,KAAKtD,IAAI,CAACoD,GAAG,IAAIzB,IAAI,CAACd,cAAc,KAAKA,cAAc,EAAE;QACtEL,cAAc,CAAC+C,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE5B,IAAI,CAAC2B,MAAM,CAAC,CAAC;MAChD;IACF,CAAC;IAED,MAAME,gBAAgB,GAAI7B,IAAI,IAAK;MACjC,IAAIA,IAAI,CAAC2B,MAAM,KAAKtD,IAAI,CAACoD,GAAG,IAAIzB,IAAI,CAACd,cAAc,KAAKA,cAAc,EAAE;QACtEL,cAAc,CAAC+C,IAAI,IAAIA,IAAI,CAACE,MAAM,CAACC,EAAE,IAAIA,EAAE,KAAK/B,IAAI,CAAC2B,MAAM,CAAC,CAAC;MAC/D;IACF,CAAC;;IAED;IACA,MAAMK,iBAAiB,GAAIhC,IAAI,IAAK;MAClCvB,WAAW,CAAC8C,YAAY,IACtBA,YAAY,CAACtB,GAAG,CAACgC,GAAG,IAClBA,GAAG,CAACR,GAAG,KAAKzB,IAAI,CAACgB,SAAS,GAAG;QAAE,GAAGiB,GAAG;QAAE9B,MAAM,EAAE,IAAI;QAAE+B,MAAM,EAAElC,IAAI,CAACkC;MAAO,CAAC,GAAGD,GAC/E,CACF,CAAC;IACH,CAAC;IAEDjE,MAAM,CAACmE,EAAE,CAAC,aAAa,EAAEd,gBAAgB,CAAC;IAC1CrD,MAAM,CAACmE,EAAE,CAAC,cAAc,EAAET,iBAAiB,CAAC;IAC5C1D,MAAM,CAACmE,EAAE,CAAC,aAAa,EAAEN,gBAAgB,CAAC;IAC1C7D,MAAM,CAACmE,EAAE,CAAC,cAAc,EAAEH,iBAAiB,CAAC;IAE5C,OAAO,MAAM;MACXhE,MAAM,CAACoE,GAAG,CAAC,aAAa,EAAEf,gBAAgB,CAAC;MAC3CrD,MAAM,CAACoE,GAAG,CAAC,cAAc,EAAEV,iBAAiB,CAAC;MAC7C1D,MAAM,CAACoE,GAAG,CAAC,aAAa,EAAEP,gBAAgB,CAAC;MAC3C7D,MAAM,CAACoE,GAAG,CAAC,cAAc,EAAEJ,iBAAiB,CAAC;;MAE7C;MACAhE,MAAM,CAACqE,iBAAiB,CAACnD,cAAc,CAAC;IAC1C,CAAC;EACH,CAAC,EAAE,CAACA,cAAc,EAAEI,WAAW,EAAEjB,IAAI,CAACoD,GAAG,EAAE7B,aAAa,EAAER,QAAQ,CAAC,CAAC;EAEpE1B,SAAS,CAAC,MAAM;IACd6B,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACf,QAAQ,CAAC,CAAC;EAEd,MAAM8D,YAAY,GAAGA,CAAA,KAAM;IACzBhE,QAAQ,CAAC,CAAC;IACVc,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,IAAI,CAACE,WAAW,EAAE;IAChB,oBAAOnB,OAAA;MAAKoE,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACvD;EAEA,IAAI9D,OAAO,EAAE;IACX,oBAAOX,OAAA;MAAKoE,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC3D;EAEA,oBACEzE,OAAA;IAAKoE,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BrE,OAAA;MAAKoE,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BrE,OAAA;QAAKoE,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BrE,OAAA;UAAKoE,SAAS,EAAC,oBAAoB;UAAAC,QAAA,eACjCrE,OAAA;YAAMoE,SAAS,EAAC,yBAAyB;YAAAC,QAAA,EACtClD,WAAW,CAACuD,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC;UAAC;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACNzE,OAAA;UAAAqE,QAAA,gBACErE,OAAA;YAAIoE,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAAElD,WAAW,CAACuD;UAAQ;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5DzE,OAAA;YAAGoE,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAC9BlD,WAAW,CAAC0D,QAAQ,GAAG,QAAQ,GAAG;UAAS;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNzE,OAAA;QAAQoE,SAAS,EAAC,eAAe;QAACU,OAAO,EAAEX,YAAa;QAAAE,QAAA,EAAC;MAEzD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENzE,OAAA;MAAKoE,SAAS,EAAC,oBAAoB;MAAAC,QAAA,GAChCxD,KAAK,iBACJb,OAAA;QAAKoE,SAAS,EAAC,eAAe;QAACW,KAAK,EAAE;UAAEC,SAAS,EAAE,QAAQ;UAAEC,MAAM,EAAE;QAAS,CAAE;QAAAZ,QAAA,EAC7ExD;MAAK;QAAAyD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,EAEApE,QAAQ,CAACyB,GAAG,CAAEC,OAAO,IAAK;QACzB,MAAMmD,YAAY,GAAGnD,OAAO,CAACsB,MAAM,CAACC,GAAG,KAAKpD,IAAI,CAACoD,GAAG;QACpD,MAAM6B,SAAS,GAAG,IAAIC,IAAI,CAACrD,OAAO,CAACsD,SAAS,CAAC,CAACC,kBAAkB,CAAC,EAAE,EAAE;UACnEC,IAAI,EAAE,SAAS;UACfC,MAAM,EAAE;QACV,CAAC,CAAC;QAEF,oBACExF,OAAA;UAEEoE,SAAS,EAAE,qBAAqBc,YAAY,GAAG,KAAK,GAAG,OAAO,EAAG;UAAAb,QAAA,eAEjErE,OAAA;YAAKoE,SAAS,EAAE,kBAAkBc,YAAY,GAAG,KAAK,GAAG,OAAO,EAAG;YAAAb,QAAA,gBACjErE,OAAA;cAAGoE,SAAS,EAAE,gBAAgBc,YAAY,GAAG,KAAK,GAAG,OAAO,EAAG;cAAAb,QAAA,EAC5DtC,OAAO,CAAC0D;YAAI;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ,CAAC,eACJzE,OAAA;cAAKoE,SAAS,EAAE,gBAAgBc,YAAY,GAAG,KAAK,GAAG,OAAO,EAAG;cAAAb,QAAA,gBAC/DrE,OAAA;gBAAMoE,SAAS,EAAE,gBAAgBc,YAAY,GAAG,KAAK,GAAG,OAAO,EAAG;gBAAAb,QAAA,EAC/Dc;cAAS;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC,EACNS,YAAY,gBACXlF,OAAA;gBAAMoE,SAAS,EAAE,gBAAgBrC,OAAO,CAACC,MAAM,GAAG,MAAM,GAAG,MAAM,EAAG;gBAAAqC,QAAA,EACjE,CAACtC,OAAO,CAACC,MAAM,KAAK0D,SAAS,GAAG3D,OAAO,CAACC,MAAM,GAAG,KAAK,IAAI,IAAI,GAAG;cAAG;gBAAAsC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjE,CAAC,gBAEPzE,OAAA;gBAAMoE,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,EAAC;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAChD;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC,GAnBD1C,OAAO,CAACuB,GAAG;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAoBb,CAAC;MAEV,CAAC,CAAC,EAEDhE,WAAW,CAACkF,MAAM,GAAG,CAAC,iBACrB3F,OAAA;QAAKoE,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAC/BrE,OAAA;UAAKoE,SAAS,EAAC,eAAe;UAAAC,QAAA,eAC5BrE,OAAA;YAAGoE,SAAS,EAAC,aAAa;YAAAC,QAAA,GACvBlD,WAAW,CAACuD,QAAQ,EAAC,eACxB;UAAA;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eAEDzE,OAAA;QAAK4F,GAAG,EAAE1E;MAAe;QAAAoD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eAENzE,OAAA;MAAKoE,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BrE,OAAA;QAAM6F,QAAQ,EAAE9C,YAAa;QAACgC,KAAK,EAAE;UAAEe,OAAO,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAA1B,QAAA,gBACtErE,OAAA;UACEoE,SAAS,EAAC,YAAY;UACtB1B,KAAK,EAAEnC,UAAW;UAClByF,QAAQ,EAAEzD,YAAa;UACvB0D,WAAW,EAAC,mBAAmB;UAC/BC,IAAI,EAAC;QAAG;UAAA5B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFzE,OAAA;UACEmG,IAAI,EAAC,QAAQ;UACb/B,SAAS,EAAC,aAAa;UACvBgC,QAAQ,EAAE,CAAC7F,UAAU,CAAC8B,IAAI,CAAC,CAAE;UAAAgC,QAAA,EAC9B;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrE,EAAA,CApPIH,UAAU;EAAA,QAOaN,SAAS,EAClBC,WAAW,EACZF,WAAW;AAAA;AAAA2G,EAAA,GATxBpG,UAAU;AAsPhB,eAAeA,UAAU;AAAC,IAAAoG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}